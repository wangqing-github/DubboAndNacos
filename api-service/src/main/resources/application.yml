server:
  port: 9011
  max-http-header-size: 100000
  servlet:
    session:
      timeout: 600
spring:
  application:
    name: api-service
  session:
    # 设置spring-session存储类型
    store-type: redis
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    hostName: localhost
    port: 6379
    password:
    timeout: 0
    general-config:
      min-idle: 1
      max-idle: 2
      max-total: 5
      max-wait: 30000
      test-on-borrow: true
      block-when-exhausted: true
      test-on-return: true
      test-on-create: true
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 20000
      num-tests-per-eviction-run: 20000
  datasource:
      url: jdbc:mysql://101.34.174.241:3306/game?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
      username: root
      password: Aa123456
      # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 10
      # 最小连接池数量
      min-idle: 10
      # 最大连接池数量
      max-active: 20
      # 获取连接等待超时的时间
      max-wait: 20000
      # 间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      #  验证连接有效与否的SQL，不同的数据配置不同
      validation-query: select 1
      #  建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #  申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。这里建议配置为TRUE，防止取到的连接不可用
      test-on-borrow: true
      #  归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      #  是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，该应该是支持PSCache。打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      #  属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
      filters: stat,wall,log4j
      stat-view-servlet:
        login-username: druid
        login-password: druid
#mybatis
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.wq.beans
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: UUID
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_null
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: mysql
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
dubbo:
  application:
    name: api-service
  registry:
    address: nacos://127.0.0.1:8848?namespace=c89541f3-59b0-4ede-b3be-396eef7499e8
    username: nacos
    password: nacos
  scan:
    base-packages: com.wq.dubbo
  protocol:
    name: dubbo
    port: 15512
#file-upload:
#  ## 文件上传文件夹 自动 追加 /uploads/
#  file-save-path: E://IDE//IDE//workspace//mapo-manage
#  template-path: E://IDE//IDE//workspace//mapo-manage//template
#  compress-height: 200
#  compress-width: 200
#  ffmpeg-home:  /Users/reige/work/mapo-manage/doc/ffmpeg/bin
